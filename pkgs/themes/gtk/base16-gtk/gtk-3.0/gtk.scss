@use "../common/helpers" as h;
@use "../common/shadows" as shadows;
@use "../common/entry" as *;
@use "../common/spinbutton" as *;
@import url("file:///home/brandon/.config/gtk-3.0/colors.css");

/*Resets*/
widget > box > scrolledwindow > viewport.frame > box > box > frame {
  margin: 0px;
  box-shadow: none;
}

/*base00*/
stack > widget > box > box > button.flat:active, /*Ex: GimpDock*/
stack > widget > box > box > button.flat:checked,
stack > widget > box > box > box > button.flat:active,
stack > widget > box > box > box > button.flat:checked,
stack > box > scrolledwindow > viewport > box > frame > box > box > button:active,
stack > box > scrolledwindow > viewport > box > frame > box > box > button:checked,
stack > box > scrolledwindow > viewport > box > frame > box > box > box > button:active,
stack > box > scrolledwindow > viewport > box > frame > box > box > box > button:checked,
stack > box > scrolledwindow > viewport > box > box > frame > grid > box > box > box > button:active,
stack > box > scrolledwindow > viewport > box > box > frame > grid > box > box > box > button:checked,
widget > box > scrolledwindow > viewport.frame > box > box > box > button:active,
widget > box > scrolledwindow > viewport.frame > box > box > box > button:checked {
  @include shadows.apply-shadow(inset, base00);
}
stack > box > scrolledwindow > viewport check {
  @include shadows.apply-shadow(inset-thin, base00);
}

@keyframes ripple-out {
  from {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(currentColor, 1)") 0%, transparent 0%);
  }
  to {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(currentColor, 1)") 100%, transparent 0%);
  }
}

@keyframes ripple-in {
  from {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(currentColor, 1)") 100%, transparent 0%);
  }
  to {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(currentColor, 1)") 0%, transparent 0%);
  }
}

@keyframes ripple-out-base0D {
  from {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(@base0D, 1)") 0%, transparent 0%);
  }
  to {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(@base0D, 1)") 100%, transparent 0%);
  }
}

@keyframes ripple-in-base0D {
  from {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(@base0D, 1)") 100%, transparent 0%);
  }
  to {
    background-image: radial-gradient(circle farthest-corner at center, unquote("alpha(@base0D, 1)") 0%, transparent 0%);
  }
}

@keyframes slide-right {
  from {
    background-image: radial-gradient(circle farthest-corner at 0% 50%, unquote("alpha(currentColor, 1)") 0%, transparent 0%);
  }
  to {
    background-image: radial-gradient(circle farthest-corner at 50% 50%, unquote("alpha(currentColor, 1)") 100%, transparent 0%);
  }
}

@keyframes slide-left {
  from {
    background-image: radial-gradient(circle farthest-corner at 50% 50%, unquote("alpha(currentColor, 1)") 100%, transparent 0%);
  }
  to {
    background-image: radial-gradient(circle farthest-corner at 0% 50%, unquote("alpha(currentColor, 1)") 0%, transparent 0%);
  }
}

.background {
  color: h.token-resolve(window_fg_color);
}

arrow {
  min-width: 16px;
  min-height: 16px;
  /* color: @base0D; */
  /* -gtk-icon-source: -gtk-icontheme("go-next-symbolic"); */
}
arrow.left {
  -gtk-icon-source: -gtk-icontheme("pan-start-symbolic");
}
arrow.right {
  -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
}
arrow.down,
arrow.bottom {
  -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
}
arrow.up,
arrow.top {
  -gtk-icon-source: -gtk-icontheme("pan-up-symbolic");
}

*:disabled {
  opacity: 0.6;
}

window {
  color: h.token-resolve(base0D);
  background-color: h.token-resolve(base01);
}
window.background > box {
  background-color: h.token-resolve(base01);
}

/* Merge of headerbar and headerbar windowhandle > box from gtk-4.0 */
headerbar {
  min-height: 46px;
  margin: 0px -1px 0px -1px; /*margin-bottom 6px in gtk-4, not here because creates transparent gap*/
  padding: 6px 7px 6px 7px;
  border-bottom: 1px solid h.token-resolve(base01-black-80-dark);

  color: h.token-resolve(base0D);

  background-color: h.token-resolve(base01);
  @include shadows.apply-shadow(separator-bottom-horizontal, base01);
}
dialog > headerbar {
  padding: 0px 7px;
}

decoration {
  margin: 0px 30px 45px 15px;
  border-radius: 10px;
  @include shadows.apply-shadow(wide, base01);
}

dialog,
.dialog-vbox,
.titlebar {
  background-color: h.token-resolve(base01);
}
buttonbox.dialog-action-area {
  margin: 3px;
}

/********************** General Typography * */
label,
text,
cellview,
entry,
treeview,
textview,
spinbutton,
popover,
window {
  font:
    normal 16px "JetBrainsMono Nerd Font",
    sans-serif;
}
sort-indicator,
cellview,
scrolledwindow,
row.activatable > button.text-button:only-child,
button.image-button,
menubutton,
image.expander-row-arrow {
  color: inherit;
}
modelbutton,
row.activatable > button.text-button:only-child,
button.image-button {
  background-color: inherit;
}
label.title,
label.subtitle {
  padding: 0px 12px 0px 12px;
}
label.subtitle {
  opacity: 0.5;
}
label > link {
  font-weight: bold;
  color: h.token-resolve(base0C);
}
.error {
  color: h.token-resolve(base08);
}

@keyframes spin {
  to {
    transform: rotate(1turn);
  }
}

spinner {
  color: h.token-resolve(base0D);
  opacity: 0;
  background: none;

  -gtk-icon-source: -gtk-icontheme("process-working-symbolic");
}

spinner:checked {
  opacity: 1;
  animation: spin 1s linear infinite;
}

/********************** Entry * */
@include entry-styles();

sort-indicator,
button:active sort-indicator {
  color: h.token-resolve(base0D);
}
button:hover:not(:active) sort-indicator {
  color: h.token-resolve(base01);
}

progressbar,
levelbar {
  background-color: transparent;
}
progressbar text {
  color: h.token-resolve(base0D);
}
progressbar.vertical trough {
  min-width: 8px;
  min-height: 80px;
}
progressbar.vertical progress {
  min-width: 8px;
}
progressbar.horizontal trough {
  min-width: 150px;
  min-height: 8px;
}
progressbar.horizontal trough,
progressbar.horizontal progress,
levelbar.horizontal block {
  min-height: 8px;
  border-radius: 99px;
}
levelbar.continuous block {
  border-radius: 50px;
}
levelbar.discrete.horizontal block {
  min-width: 26px;
}
levelbar.discrete block:first-child {
  border-radius: 50px 0px 0px 50px;
}
levelbar.discrete block:last-child {
  border-radius: 0px 50px 50px 0px;
}
levelbar.discrete block:not(:first-child):not(last-child) {
  border-radius: 0px;
}
levelbar.discrete block.filled:not(:first-child) {
  border-left: 1px solid h.token-resolve(base01);
}
block.empty {
  border: none;
  background-color: transparent;
  @include shadows.apply-shadow(inset-thin, base01);
}
block.filled {
  background-color: h.token-resolve(base0B);
}

progressbar progress,
levelbar block.filled {
  background-color: h.token-resolve(base0B);
}
progressbar progress {
  margin: 0px -1px 0px -1px;
  border-radius: 50px;
}
levelbar.discrete > trough > block:last-child {
  border-top-right-radius: 50px;
  border-bottom-right-radius: 50px;
}
label.in-progress {
  color: h.token-resolve(base01);
}

scale slider,
switch slider {
  min-width: 20px;
  min-height: 20px;
  border-radius: 100%;

  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(thin, base02);
}

scale {
  min-width: 125px;
  min-height: 10px;
  padding: 11px;
}
scale.vertical {
  min-width: 10px;
  min-height: 125px;
}
scale.marks-after {
  padding: 10px 30px 0px 30px;
}
scale.marks-before {
  padding: 0px 30px 10px 30px;
}
scale highlight {
  border-radius: 99px;
  background-color: h.token-resolve(base0B);
}
scale slider {
  margin: -8px;
  color: h.token-resolve(base0D);
  animation: ripple-in 200ms cubic-bezier(0, 0, 0.2, 1) forwards;
}
scale slider:hover {
  color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
  animation: ripple-out 200ms cubic-bezier(0, 0, 0.2, 1) forwards;
}
scale value {
  color: h.token-resolve(base0D);
}
scale marks.bottom {
  margin: 6px 0px 0px 0px;
}
scale marks.top {
  margin: 0px 0px 6px 0px;
}
scale marks indicator,
scale marks mark:only-child indicator {
  min-width: 1px;
  min-height: 6px;
  color: h.token-resolve(base0B);
}
scale marks mark:first-child indicator {
  color: h.token-resolve(base08);
}

progressbar trough,
levelbar trough,
progresscell trough,
progresscell,
scale trough {
  border-radius: 50px;
  background-color: transparent;
  @include shadows.apply-shadow(inset-thin, base01);
}
scale.vertical trough {
  min-width: 3px;
}

switch {
  padding: 3px;
  border-radius: 50px;

  color: h.token-resolve(base0B);

  background: transparent;
  @include shadows.apply-shadow(inset, base01);

  animation: slide-left 200ms cubic-bezier(0, 0, 0.2, 1) forwards;
}
switch:checked {
  color: h.token-resolve(base0B);
  @include shadows.apply-shadow(inset, base0B);
  animation: slide-right 200ms cubic-bezier(0, 0, 0.2, 1) forwards;
}
switch image {
  color: transparent;
}

checkbutton,
radiobutton {
  padding: 4px;
}
checkbutton > label,
radiobutton > label {
  margin-right: 4px;
  color: h.token-resolve(base0D);
}
check,
radio {
  min-width: 14px;
  min-height: 14px;
  margin: 0px 4px 0px 4px;
  padding: 4px;
  border-width: 0px;

  background-color: transparent;
  @include shadows.apply-shadow(inset-thin, base01);

  animation: ripple-in-base0D 200ms cubic-bezier(0, 0, 0.2, 1) forwards;
}
check:checked,
check:indeterminate,
radio:checked,
radio:indeterminate {
  color: h.token-resolve(base01);
  @include shadows.apply-shadow(inset-thin, base0D);
  animation: ripple-out-base0D 200ms cubic-bezier(0, 0, 0.2, 1) forwards;
}
radio {
  border-radius: 100%;
}
check {
  border-radius: 6px;
}
radio:checked {
  -gtk-icon-source: image(-gtk-recolor(url("assets/bullet-symbolic.svg")), -gtk-recolor(url("assets/bullet-symbolic.symbolic.png")));
}
radio:indeterminate {
  -gtk-icon-source: image(-gtk-recolor(url("assets/dash-symbolic.svg")), -gtk-recolor(url("assets/dash-symbolic.symbolic.png")));
}
check:checked {
  -gtk-icon-source: image(-gtk-recolor(url("assets/check-symbolic.svg")), -gtk-recolor(url("assets/check-symbolic.symbolic.png")));
}
check:indeterminate {
  -gtk-icon-source: image(-gtk-recolor(url("assets/dash-symbolic.svg")), -gtk-recolor(url("assets/dash-symbolic.symbolic.png")));
}

/***************** button **************************/
button {
  min-width: 16px;
  min-height: 30px;
  margin: 1px 0px 0px 1px;
  padding: 1px 9px 2px 8px;
  border-width: 0px;
  border-radius: 50px;

  background-color: transparent;

  transition-duration: 0.2s;
  transition-property: background-color, box-shadow;
}
button.text-button,
button.font,
button.file {
  color: h.token-resolve(base0D);
  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(thin, base02);
}
button.default.text-button,
button.suggested-action.text-button,
button.suggested-action.pill {
  color: h.token-resolve(base0B);
  background-color: h.token-resolve(base0B-black-60);
  @include shadows.apply-shadow(thin, base0B-dull);
}
button.destructive-action {
  background-color: h.token-resolve(base08-black-60);
  @include shadows.apply-shadow(thin, base08-dull);
}
button.destructive-action,
button.close {
  color: h.token-resolve(base08);
}
button.close > image {
  padding: 0px;
  background-color: transparent;
}
button.small-button,
button.sidebar-button {
  min-height: 22px;
  padding: 2px 6px 3px 5px;
}
button.flat {
  background-color: transparent;
  box-shadow: none;
}
button.flat.link {
  color: h.token-resolve(base0C);
}

/**********************/
/**** button:hover ****/
/**********************/
button:hover:not(:active) {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}
stack > button:hover:not(:active) {
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}
button.default:hover,
button.suggested-action:hover {
  background-color: h.token-resolve(base0B);
  @include shadows.apply-shadow(thin, base0B);
}
button.destructive-action:hover:not(:active),
button.close:hover:not(:active),
button.tab-close-button:hover:not(:active) {
  background-color: h.token-resolve(base08);
  @include shadows.apply-shadow(inset-thin, base08);
}
button.flat.link:hover:not(:active) {
  color: h.token-resolve(base0C);
  background-color: transparent;
  box-shadow: none;
}
button.flat.link:hover:not(:active) > label {
  text-decoration-line: underline;
}

/******************************/
/**** button:hover:checked ****/
/******************************/
button:hover:checked {
  margin: 0px;
  padding: 2px 9px 2px 9px;
  @include shadows.apply-shadow(inset, base0D);
}
stack > button:hover:checked:not(:active),
button.text-button:hover:checked:not(:active),
button.font:hover:checked:not(:active),
button.file:hover:checked:not(:active),
button.pill:hover:checked {
  @include shadows.apply-shadow(inset, base0D);
}

/***************** button:hover:active **************************/
button:active,
button:checked,
button:hover:active {
  margin: 0px;
  padding: 2px 9px 2px 9px;
  @include shadows.apply-shadow(inset, base01);
}
stack > button:active,
button.file:active,
button.text-button:active,
button.text-button:checked,
button.font:active {
  @include shadows.apply-shadow(inset, base02);
}
button.default:active,
button.default:checked,
button.suggested-action:active,
button.suggested-action:checked {
  background-color: h.token-resolve(base0B-black-60);
  @include shadows.apply-shadow(inset, base0B-dull);
}
button.close:active {
  background-color: transparent;
}
button.small-button:active,
button.sidebar-button:active {
  margin: 0px;
  padding: 3px 6px 3px 6px;
  @include shadows.apply-shadow(inset-thin, base01);
}
button.destructive-action:active,
button.destructive-action:checked,
button.destructive-action.image-button.text-button.toggle:active {
  background-color: h.token-resolve(base08-black-60);
  @include shadows.apply-shadow(inset, base08-dull);
}
button.default:active,
button.default:checked,
button.suggested-action:active,
button.suggested-action:checked {
  background-color: h.token-resolve(base0B-black-60);
  @include shadows.apply-shadow(inset, base0B-dull);
}
button.suggested-action.image-text-button:not(.pill):active,
button.suggested-action.image-text-button:not(.pill):checked {
  background-color: transparent;
  /* box-shadow: var(--shadow-inset); */
}
button.text-button.radio,
button.text-button.toggle {
  min-width: 100px;
}
button.image-button:active,
toolbutton > button.text-button.image-button:active {
  background-color: transparent;
}
button.image-button.text-button.toggle:active {
  background-color: h.token-resolve(base02);
}
button.suggested-action:hover,
button.default:hover,
button.destructive-action:hover,
button.close:hover {
  color: h.token-resolve(base01);
}
button.default,
button.default:active,
button.suggested-action,
button.suggested-action:active,
button.suggested-action:hover:active,
button.suggested-action.image-text-button,
button.suggested-action.image-text-button:active,
button.suggested-action.image-text-button:checked {
  color: h.token-resolve(base0B);
}
button.destructive-action,
button.destructive-action:active,
button.close,
button.close:active {
  color: h.token-resolve(base08);
}
button.flat.link:active {
  color: h.token-resolve(base0C);
  background-color: transparent;
  box-shadow: none;
}
button.flat.link:active > label {
  text-decoration-line: underline;
}

button separator.vertical {
  margin: 3px 6px;
}
button:hover separator,
button:hover:checked separator {
  @include shadows.apply-shadow(inset-extra-thin, base0D);
}
button separator,
button:checked separator,
button:hover:active separator {
  @include shadows.apply-shadow(inset-extra-thin, base02);
}
button > box > arrow {
  transition: -gtk-icon-transform 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
button.combo > box > arrow {
  -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
}
button:checked > box > arrow {
  -gtk-icon-transform: rotate(-0.5turn);
}

@include spinbutton-styles(spinbutton);

/*color button*/
colorswatch {
  border-radius: 50px;
}

separator,
paned.horizontal > separator.wide {
  min-width: 3px;
  min-height: 3px;
  margin: 6px;
  padding: 0px;
  border-radius: 50px;
}
separator,
paned > separator {
  background-color: transparent;
  @include shadows.apply-shadow(inset-extra-thin, base01);
}
paned.horizontal > separator {
  margin: 6px 0px;
}
paned.vertical > separator,
box.toolbar.horizontal > separator.horizontal {
  margin: 0px 6px;
}

menubar {
  padding-bottom: 1px;
}
menubar > menuitem {
  margin: 3px;
  padding: 4px 8px 4px 8px;
  border-radius: 10px;
}
/*popover > stack merge in gtk-4.0*/
menu {
  min-width: 120px;
  padding: 6px;
  border-width: 0px;
  border-radius: 10px;
}
menu > menuitem {
  min-width: 40px;
  min-height: 30px;
  margin: 1px 0px 0px 1px;
  padding: 1px 9px 2px 8px;
  border-radius: 50px;

  color: h.token-resolve(base0D);
}
menuitem:hover {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}
menuitem accelerator {
  color: unquote("alpha(currentColor, 0.55)");
}
menu > menuitem > label:first-child,
menu > menuitem > box:first-child {
  margin-left: -38px;
  /* For the popup menuitem boundary spacing*/
  padding-left: 10px;
}
menu > menuitem > box:first-child > image:first-child {
  margin-right: 10px;
}
menu > menuitem > check:first-child,
menu > menuitem > radio:first-child {
  margin-right: 10px;
  margin-left: -2px;
}
menuitem:hover > check:not(:checked),
menuitem:hover > radio:not(:checked) {
  @include shadows.apply-shadow(inset-thin, base0D);
}
menu > separator {
  @include shadows.apply-shadow(inset-extra-thin, base01);
}

toolbar {
  padding: 6px;
  border-top: 0px solid rgb(41, 47, 69);
  background-color: h.token-resolve(base01);
}
toolbutton > button.text-button.image-button {
  padding: 1px 5px 2px 4px;
}
toolbutton > button.text-button.image-button:hover:active {
  padding: 2px 5px 2px 5px;
}
statusbar frame {
  margin: -5px;
  background-color: transparent;
  box-shadow: none;
}

tabs {
  padding: 0px 4px 0px 4px;
}
tab {
  /*min-width: 50px;*/ /*Had to bump to 115 here to increase spacing between labels and buttons*/
  min-height: 24px;
  margin: 6px 0px 5px 1px;
  padding: 4px 17px 5px 16px;

  background-color: transparent;

  transition-duration: 0.2s;
  transition-property: background-color, box-shadow;
}
tab:hover {
  border-color: transparent;
  border-radius: 50px;

  color: h.token-resolve(base01);

  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}
tab:checked {
  margin: 5px 0px 5px 0px;
  padding: 5px 17px 5px 17px;
  border-radius: 50px;
  color: inherit;
  background-color: transparent;
  @include shadows.apply-shadow(inset, base01);
}
tab > image {
  min-width: 30px;
}
tab > label {
  min-width: 115px;
}
tab:hover:not(:checked) > label,
tab:hover:not(:checked) > image {
  color: h.token-resolve(base01);
}
tab:hover:not(:checked) > box > button.small-button:active {
  @include shadows.apply-shadow(inset-thin, base0D);
}
/*Create the illusion of inset separators*/
tab + tab {
  margin-left: 2px;
  padding-left: 15px;
  border-left: 1px solid h.token-resolve(base01-black-80);
  border-radius: 0px;
  @include shadows.apply-shadow(separator-vertical, base01);
}
tab + tab:checked {
  margin-left: 1px;
  padding: 5px 17px 5px 17px;
  border-left: 0px;
}
header.right > tabs > tab,
header.left > tabs > tab {
  margin: 1px 5px 0px 6px;
  padding: 4px 17px 5px 16px;
}
header.right > tabs > tab:hover,
header.left > tabs > tab:hover {
  border-radius: 50px;
  @include shadows.apply-shadow(thin, base0D);
}
header.right > tabs > tab:checked,
header.left > tabs > tab:checked {
  margin: 0px 5px 0px 5px;
  padding: 5px 17px 5px 17px;
  border-radius: 50px;
  @include shadows.apply-shadow(inset, base01);
}
header.right > tabs > tab + tab,
header.left > tabs > tab + tab {
  margin-top: 2px;
  padding-top: 3px;
  border-top: 1px solid h.token-resolve(base01-black-80);
  border-left: none;
  border-radius: 0px;
  @include shadows.apply-shadow(separator-horizontal, base01);
}
header.right > tabs > tab + tab:hover,
header.left > tabs > tab + tab:hover {
  border-top-color: transparent;
}
header.right > tabs > tab + tab:checked,
header.left > tabs > tab + tab:checked {
  margin: 1px 5px 0px 5px;
  padding: 5px 17px 5px 17px;
  border-top: 0px;
}
tab:hover + tab:not(:checked),
tab:checked + tab:not(:hover) {
  border-color: transparent;
  box-shadow: none;
}
header.top > tabs > arrow.up {
  margin-left: 6px;
  color: unquote("alpha(currentColor, 0.5)");

  -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
}
header.top > tabs > arrow.down {
  margin-right: 6px;
  color: unquote("alpha(currentColor, 0.75)");

  -gtk-icon-source: -gtk-icontheme("pan-start-symbolic");
}
header.top > tabs > arrow:disabled {
  color: unquote("alpha(currentColor, 0.25)");
}

header.top > tabs > arrow:hover {
  color: unquote("alpha(currentColor, 1)");
}

actionbar > revealer,
actionbar > revealer > box {
  padding: 6px;
}
actionbar > revealer > box > button.image-button.popup {
  margin: 6px;
}
actionbar > revealer > box > button.image-button.popup:active {
  margin: 5px 6px 6px 5px;
}

frame {
  margin: 6px;
  border-radius: 10px;
  background-color: h.token-resolve(base00);
  @include shadows.apply-shadow(inset, base00);
}
frame menubar,
frame toolbar {
  background-color: transparent;
}
frame > label {
  margin: 4px;
}
scrolledwindow:not(.sidebar),
textview {
  /*margin: 6px;*/ /*Makes spacing better. Not in gtk4 version*/
  border-radius: 10px;
}
scrolledwindow.frame,
frame {
  margin: 6px;
  border-radius: 10px;
  background-color: h.token-resolve(base00);
  @include shadows.apply-shadow(inset, base00);
}
scrolledwindow.frame textview,
frame textview {
  box-shadow: none;
}
stack > box > scrolledwindow:not(.frame) {
  margin: 6px;
}
stack > box > scrolledwindow > viewport {
  border-radius: 10px;
  background-color: h.token-resolve(base00);
  @include shadows.apply-shadow(inset, base00);
}
stack > box > scrolledwindow > viewport > box.vertical > box.horizontal:first-child,
stack > box > scrolledwindow > viewport > box.vertical > grid.horizontal:first-child {
  margin: 6px 6px 0px 6px;
}
/*Why use padding 8px 6px 6px 8px?*/
frame > scrolledwindow {
  margin: 6px;
}
frame.app-notification {
  padding: 10px;
}
frame button.small-button:active,
frame button.small-button:hover:active,
scrolledwindow.frame button.small-button:active,
scrolledwindow.frame button.small-button:hover:active,
scrolledwindow.frame block.empty,
scrolledwindow.frame progressbar trough,
scrolledwindow.frame levelbar trough,
scrolledwindow.frame scale trough,
scrolledwindow.frame radio:not(:checked):not(:indeterminate),
scrolledwindow.frame check:not(:checked):not(:indeterminate) {
  @include shadows.apply-shadow(inset-thin, base00);
}
frame > * > separator,
frame > paned > separator.wide,
frame box.toolbar > separator {
  @include shadows.apply-shadow(inset-extra-thin, base00);
}
frame dropdown > button.toggle:active,
frame dropdown > button.toggle:checked:not(:hover),
frame spinbutton > button.image-button:active,
scrolledwindow.frame spinbutton > button.image-button:active {
  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(inset, base02);
}
frame button.image-button:active,
frame button.image-button:checked,
frame toolbutton > button.text-button.image-button:active,
frame tab:checked,
frame tab:active,
scrolledwindow.frame button:hover:active,
scrolledwindow.frame switch:not(:checked) {
  background-color: transparent;
  @include shadows.apply-shadow(inset, base00);
}

iconview text selection:focus,
iconview text selection,
iconview:selected,
iconview text:selected {
  border-radius: 10px;
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
}
textview {
  padding: 8px; /*Uses margin in gtk4*/
  border-radius: 10px;

  color: h.token-resolve(base0D);

  background-color: transparent;
  box-shadow: none;
}

treeview.view {
  margin-bottom: 2px;
  padding: 5px 8px 5px 8px;
  border-top-color: h.token-resolve(base00-white-95-dark);
  border-left-color: h.token-resolve(base00-white-90-dark);

  background-color: transparent;
  @include shadows.apply-shadow(separator-bottom-horizontal, base00);
}
treeview.view:drop(active) {
  box-shadow: none;
}
treeview.view:drop(active).after {
  border-top-style: none;
}
treeview.view:drop(active).before {
  border-bottom-style: none;
}
treeview.view > dndtarget:drop(active) {
  border-color: h.token-resolve(base01-black-80-dark);
  border-style: solid none;
  border-width: 1px;
}
treeview.view > dndtarget:drop(active).after {
  border-top-style: none;
}
treeview.view > dndtarget:drop(active).before {
  border-bottom-style: none;
}
/*separator rule overrides treeview.view > dndtarget:drop(active).before, not sure why*/
treeview.view.separator {
  min-height: 5px;
  color: h.token-resolve(base00-black-85-dark);
  box-shadow: none;
}
treeview.view .cell {
  color: h.token-resolve(base0D);
}
treeview.view.expander {
  min-width: 16px;
  min-height: 16px;

  color: h.token-resolve(base0D-black-60);

  transition: -gtk-icon-transform 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);

  -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
}
treeview.view.expander:checked {
  -gtk-icon-transform: rotate(0.25turn);
}
treeview.view.expander:dir(rtl) {
  -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
}
treeview.view.expander:dir(rtl):checked {
  -gtk-icon-transform: rotate(-0.25turn);
}
treeview.view.expander:hover {
  color: h.token-resolve(base01);
}
treeview.view.expander:hover:selected {
  color: unquote("mix(@base0D, black, 0.5)");
}
treeview.view.expander:selected:not(:hover) {
  color: h.token-resolve(base0D-black-60);
}
treeview.view.expander:disabled {
  color: unquote("alpha(@base0D, 0.1)");
}
treeview.view.trough:selected:hover {
  box-shadow: none;
}
treeview.view > header > button:not(:hover):not(:active) {
  border-style: solid;
  border-bottom-color: h.token-resolve(base00-black-65-dark);
  border-bottom-width: 1px;
  border-radius: 0;
}
treeview.view acceleditor > label {
  background-color: h.token-resolve(base0D);
}
treeview.view radio:checked,
treeview.view check:checked,
treeview .cell:hover:not(:focus) {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
}
treeview.view check.cell:hover:not(:focus),
treeview.view radio.cell:hover:not(:focus) {
  @include shadows.apply-shadow(inset-thin, base0D);
}
treeview.view:hover:selected:not(:focus) {
  @include shadows.apply-shadow(inset, base0D);
}
treeview.view:selected:focus,
treeview.view:selected {
  @include shadows.apply-shadow(inset, base01);
}
scrolledwindow treeview.view:selected:focus,
scrolledwindow treeview.view:selected {
  @include shadows.apply-shadow(inset, base00);
}
.rubberband,
rubberband,
XfdesktopIconView.view .rubberband,
.content-view rubberband,
.content-view .rubberband,
treeview.view rubberband,
flowbox rubberband {
  border: 1px solid h.token-resolve(base0D);
  background-color: unquote("alpha(@base0D, 0.2)");
}
filechooser scrolledwindow {
  box-shadow: none;
}

scrollbar {
  margin-right: -12px;
  padding: 0px;
  color: h.token-resolve(base0D);
  opacity: 0.5;
}
scrollbar.bottom {
  margin: 0px 0px -12px 0px;
}
scrollbar > contents > trough {
  border-radius: 50px;
}
scrollbar > contents > trough > slider {
  min-width: 8px;
  min-height: 8px;
  margin: -8px;
  border: 8px solid transparent;
  border-radius: 50px;

  background-color: h.token-resolve(base0D);
  background-clip: padding-box;

  transition: all 200ms linear;
}
scrollbar.bottom.horizontal > contents > trough {
  margin: 16px 9px 16px 9px;
}
scrollbar.right.vertical > contents > trough {
  margin: 9px 16px 9px 16px;
}
scrollbar > contents > trough > slider:disabled {
  opacity: 0;
}
scrollbar.overlay-indicator.horizontal:not(.hovering) > contents > trough > slider {
  min-width: 40px;
  min-height: 3px;
}
scrollbar.overlay-indicator.vertical:not(.hovering) > contents > trough > slider {
  min-width: 3px;
  min-height: 40px;
}
scrollbar.overlay-indicator.hovering > contents > trough {
  /* This is rgb value of base0D */
  background-color: rgba(137, 180, 250, 0.3);
}
scrollbar.overlay-indicator.horizontal.hovering > contents > trough > slider {
  min-height: 8px;
}
scrollbar.overlay-indicator.vertical.hovering > contents > trough > slider {
  min-height: 40px;
}
scrollbar button {
  color: rgba(0, 0, 0, 0);
  background-color: rgba(0, 0, 0, 0);
}
scrollbar .down {
  margin-bottom: -50px;
}
scrollbar .up {
  margin-top: -50px;
}

tooltip {
  margin: 1px 30px 45px 15px;
  padding: 6px 10px;
  border-width: 0px;
  border-radius: 50px;

  color: h.token-resolve(base0D);

  background-color: h.token-resolve(base03);
}
tooltip decoration {
  border-radius: 50px;
  background-color: transparent;
  box-shadow: none;
  @include shadows.apply-shadow(wide, base03);
}
tooltip label {
  padding: 0px 6px 0px 6px;
}

spinner {
  color: h.token-resolve(base0D);

  animation-name: spin;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  -gtk-icon-source: -gtk-icontheme("process-working-symbolic");
}

.popup {
  border-radius: 10px;
}
.popup > decoration {
  background-color: h.token-resolve(base01);
}

/*-------------------------------------------*/

/* container */
stackswitcher,
box.linked {
  min-height: 24px;
}
stackswitcher.linked {
  margin: 7px 0px 6px 1px;
}
.linked {
  margin: 1px 0px 0px 1px;
  border-radius: 17px;
  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(thin, base02);
}
viewswitcher > button:first-child,
.linked > button:first-child,
.linked > entry:first-child,
.linked > scrolledwindow:first-child,
.linked > menubutton:first-child > button {
  border-radius: inherit 0px 0px inherit;
}
viewswitcher > button:last-child,
.linked > button:last-child,
.linked > entry:last-child,
.linked > menubutton:last-child,
.linked > menubutton:last-child > button {
  border-top-left-radius: 0px;
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: 0px;
}
.linked > button:hover,
.linked > entry:focus {
  border-radius: inherit;
}
.linked.vertical > combobox:first-child,
.linked.vertical > button:first-child,
.linked.vertical > entry:first-child {
  border-radius: inherit inherit 0px 0px;
}
.linked.vertical > button:last-child,
.linked.vertical > entry:last-child {
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
.linked.vertical > button:hover,
.linked.vertical > entry:focus {
  border-radius: inherit;
}
.linked > button:only-child {
  border-radius: inherit;
}
.linked > button:active,
.linked > button:checked,
.linked > entry:focus,
.linked > menubutton > button:active,
.linked > menubutton > button:checked {
  padding: 2px 9px 2px 9px;
  border: 0px;
  border-radius: 17px;
  @include shadows.apply-shadow(inset, base02);
}
.linked > button:hover:checked,
.linked > menubutton > button:hover:checked {
  padding: 2px 9px 2px 9px;
  @include shadows.apply-shadow(inset, base0D);
}
.linked > button + button,
.linked > entry + button,
.linked > entry + entry,
.linked > entry + menubutton > button,
.linked > scrolledwindow + menubutton > button {
  margin: 1px 0px 0px 2px;
  padding: 1px 9px 2px 8px;
  border-left: 1px solid h.token-resolve(base02-black-90-dark);
  border-radius: 0px;
  @include shadows.apply-shadow(separator-vertical, base02);
}
.linked.vertical > button + button,
.linked.vertical > spinbutton + button,
.linked.vertical > entry + entry {
  margin: 2px 0px 0px 1px;
  padding: 1px 9px 2px 8px;
  border-top: 1px solid h.token-resolve(base02-black-90-dark);
  border-left: 0px;
  border-radius: 0px;

  @include shadows.apply-shadow(separator-horizontal, base02);
}
.linked > button + button:hover,
.linked > spinbutton + button:hover,
.linked > entry + button:hover,
.linked > entry + menubutton > button:hover,
.linked > scrolledwindow + menubutton > button:hover {
  border-color: transparent;
  border-radius: 17px;
  @include shadows.apply-shadow(thin, base0D);
}
.linked > button + button:active,
.linked > button + button:checked,
.linked > spinbutton + button:active,
.linked > entry + button:active,
.linked > entry + button:checked,
.linked > entry + menubutton > button:active,
.linked > entry + menubutton > button:checked,
.linked > scrolledwindow + menubutton > button:active,
.linked > scrolledwindow + menubutton > button:checked,
.linked > entry + entry:focus {
  margin: 0px 0px 0px 2px;
  padding: 2px 9px 2px 9px;
  border-left-width: 0px;
  @include shadows.apply-shadow(inset, base02);
}
.linked > button:first-child:not(:hover):not(:checked),
.linked > button:hover + button:not(:checked),
.linked > button:active + button:not(:checked),
.linked > button:checked + button:not(:hover),
.linked > combobox:hover + spinbutton,
.linked > scrolledwindow:hover + menubutton,
.linked > entry:focus + button:not(:hover):not(:checked),
.linked > entry:focus + entry:not(:focus),
.linked > entry:focus + menubutton > button:not(:hover):not(:checked),
.linked > entry:first-child:not(:focus) {
  border-color: transparent;
  box-shadow: none;
}
.linked.vertical > button + button:active,
.linked.vertical > button + button:checked,
.linked.vertical > spinbutton + button:active,
.linked.vertical > entry + entry:focus {
  margin: 2px 0px 0px 0px;
  padding: 2px 9px 2px 9px;
  border-top-width: 0px;
}
/*For when there's ever a horizontally linked spinbutton*/
.linked > spinbutton {
  margin: 0px 0px 0px 1px;
  padding: 0px 0px 0px 0px;
}
.linked.vertical > spinbutton {
  margin: 2px 0px 0px 0px;
  padding: 2px 0px 0px 0px;
  border-top: 1px solid h.token-resolve(base02-black-90-dark);
  border-radius: 0px;
  @include shadows.apply-shadow(separator-horizontal, base02);
}

.linked > button:not(.combo):checked,
.linked > button:not(.combo):hover:checked {
  @include shadows.apply-shadow(inset, base02);
  animation: none;
}
.linked > combobox:not(:hover) > .linked > button:checked:not(:hover) {
  box-shadow: none;
}
.linked > combobox > .linked {
  box-shadow: none;
}

.linked:not(buttonbox) > button:not(.text-button):not(#_):hover:checked * {
  color: h.token-resolve(base0D);
}

.linked > button.text-button:checked,
.linked > button.text-button:hover:checked {
  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(inset, base02);
}
/*  Linked widgets that function as tabs  */
.linked > button.text-button:nth-child(4n + 1):hover:not(:active):not(:checked),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 2):hover:not(:active):not(:checked),
buttonbox.linked > button.text-button:nth-child(4n + 1):hover:not(:active) {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0B);
  @include shadows.apply-shadow(thin, base0B);
}
.linked > button.text-button:nth-child(4n + 1),
.linked > button.text-button:nth-child(4n + 1):not(:hover) *,
.linked > button.text-button:nth-child(4n + 1):active *,
.linked > button.text-button:nth-child(4n + 1):checked *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 2),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 2):not(:hover) *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 2):active *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 2):checked * {
  color: h.token-resolve(base0B);
}
.linked > button.text-button:nth-child(4n + 2):hover:not(:active):not(:checked),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 3):hover:not(:active):not(:checked),
buttonbox.linked > button.text-button:nth-child(4n + 2):hover:not(:active) {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base08);
  @include shadows.apply-shadow(thin, base08);
}
.linked > button.text-button:nth-child(4n + 2),
.linked > button.text-button:nth-child(4n + 2):not(:hover) *,
.linked > button.text-button:nth-child(4n + 2):active *,
.linked > button.text-button:nth-child(4n + 2):checked *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 3),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 3):not(:hover) *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 3):active *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 3):checked * {
  color: h.token-resolve(base08);
}
.linked > button.text-button:nth-child(4n + 3):hover:not(:active):not(:checked),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 4):hover:not(:active):not(:checked),
buttonbox.linked > button.text-button:nth-child(4n + 3):hover:not(:active) {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0A);
  @include shadows.apply-shadow(thin, base0A);
}
.linked > button.text-button:nth-child(4n + 3),
.linked > button.text-button:nth-child(4n + 3):not(:hover) *,
.linked > button.text-button:nth-child(4n + 3):active *,
.linked > button.text-button:nth-child(4n + 3):checked *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 4),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 4):not(:hover) *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 4):active *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 4):checked * {
  color: h.token-resolve(base0A);
}
.linked > button.text-button:nth-child(4n + 4):hover:not(:active):not(:checked),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 5):hover:not(:active):not(:checked),
buttonbox.linked > button.text-button:nth-child(4n + 4):hover:not(:active) {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base09);
  @include shadows.apply-shadow(thin, base09);
}
.linked > button.text-button:nth-child(4n + 4),
.linked > button.text-button:nth-child(4n + 4):not(:hover) *,
.linked > button.text-button:nth-child(4n + 4):active *,
.linked > button.text-button:nth-child(4n + 4):checked *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 5),
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 5):not(:hover) *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 5):active *,
filechooser #pathbarbox .path-bar.linked > button:not(.slider-button):nth-child(4n + 5):checked * {
  color: h.token-resolve(base09);
}

combobox arrow {
  -gtk-icon-source: -gtk-icontheme("go-next-symbolic");
}

stack.view {
  background-color: h.token-resolve(base00);
}
stack > button:not(:hover):not(.toggle):not(.image-button) {
  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(thin, base02);
}
stack > button:active {
  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(inset, base02);
}
stack > scrolledwindow > viewport {
  border-radius: 10px;
  background-color: h.token-resolve(base00);
  @include shadows.apply-shadow(inset, base00);
}
/*Because list covers the viewport and its box-shadow*/
stack > scrolledwindow > viewport > list {
  background-color: transparent;
}
stack.view scrolledwindow {
  /* background-color: h.token-resolve(base00); */
  background-color: transparent;
}

frame.border-inset border {
  border-style: solid inset inset solid;
  border-width: 1px;
}
frame.border-outset border {
  border-style: outset solid solid outset;
  border-width: 1px;
}
frame.border-inset border,
frame.border-outset border,
frame.border-groove border,
frame.border-ridge border {
  border-color: h.token-resolve(base02);
  border-radius: 10px;
}
frame.border-groove border {
  border-style: groove;
  border-width: 2px;
}
frame.border-ridge border {
  border-style: ridge;
  border-width: 2px;
}

button.popup {
  border: none;
  border-radius: 50px;
}

modelbutton {
  min-height: 24px;
  margin: 1px 0px 0px 1px;
  padding: 4px 16px 5px 15px;
  border-radius: 50px;
}
modelbutton:hover,
modelbutton:hover:focus {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}
modelbutton:active,
modelbutton:hover:active,
modelbutton:focus {
  margin: 0px;
  padding: 5px 16px 5px 16px;
  color: inherit;
  background-color: h.token-resolve(base01);
  @include shadows.apply-shadow(inset, base01);
}
modelbutton:hover:not(:active) > check:not(:checked),
modelbutton:hover:not(:active) > radio:not(:checked) {
  @include shadows.apply-shadow(inset-thin, base0D);
}

popover {
  min-width: 120px;
  /*13px margin-top so arrow above popover doesn't overlay the bow-shadow*/
  margin: 13px 55px 65px 25px;
  padding: 6px;
  border-width: 0px;
  border-radius: 10px;

  background-color: h.token-resolve(base01);
  @include shadows.apply-shadow(wide, base01);
}
popover > stack {
  padding: 0px; /*Equivalent to the padding in gtk4 theme */
}
/*Selects two kinds of popover layouts*/
popover > box,
popover > stack > box,
popover > grid {
  margin: -9px; /*Normalizes boundaries from edge of popover to modelbuttons to align with gtk4 spacing*/
  padding: 0px;
}
popover stack > box modelbutton accelerator {
  margin-left: 12px;
}
popover.emoji-picker flowboxchild {
  margin: 6px 3px 0px 3px;
}
popover.emoji-picker > box {
  margin: 0px;
}
popover.emoji-picker scrolledwindow {
  margin: 0px;
}
popover.emoji-picker button.emoji-section.flat {
  margin: 7px 3px 0px 4px;
}
popover.emoji-picker button.emoji-section.flat:active,
popover.emoji-picker button.emoji-section.flat:checked {
  margin: 6px 3px 0px 3px;
}

popover modelbutton,
popover modelbutton:hover,
popover modelbutton:hover:focus,
button:hover popover modelbutton {
  min-width: 40px;
  min-height: 30px;
  margin: 1px 0px 0px 1px;
  padding: 1px 9px 2px 8px;
}
popover modelbutton:active,
popover modelbutton:focus,
popover modelbutton:hover:active,
button:hover popover modelbutton,
button:hover:active popover modelbutton:active,
button:hover:active popover modelbutton:focus {
  margin: 0px;
  /* padding: 2px 17px 2px 17px; */
  padding: 2px 9px 2px 9px;
  background-color: h.token-resolve(base01);
  @include shadows.apply-shadow(inset, base01);
}

popover > arrow {
  border: none;
  background-color: transparent;
  box-shadow: none;
}

button.radio:checked {
  border-radius: 50px;
}

calendar {
  color: h.token-resolve(base0D);
}
calendar *:selected {
  border-radius: 50px;
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}

expander title > arrow {
  transition: -gtk-icon-transform 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
expander title > arrow:dir(ltr) {
  -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
}
expander title > arrow:checked:dir(ltr) {
  -gtk-icon-transform: rotate(0.25turn);
}
expander title > arrow:dir(rtl) {
  -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
}
expander title > arrow:checked:dir(rtl) {
  -gtk-icon-transform: rotate(-0.25turn);
}

/*------------------row and list stuff----------------------*/
row {
  border-width: 0px;
  border-bottom: 1px solid h.token-resolve(base00-black-80-dark);
  border-radius: 50px;

  color: inherit;

  background-color: transparent;
  @include shadows.apply-shadow(separator-bottom-horizontal, base00);

  transition: none;
}
row.activatable > row,
row.activatable:hover > row.activatable:hover,
row.activatable button.image-button {
  color: inherit;
}
row.activatable:hover {
  border-bottom: 1px solid h.token-resolve(base0D);
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}

row:last-child {
  border-bottom-color: transparent;
  box-shadow: none;
}
row.activatable:active,
row.activatable:selected,
columnview row:selected {
  border-bottom-color: transparent;
  color: inherit;
  background-color: transparent;
  @include shadows.apply-shadow(inset, base00);
}

row.activatable:hover:not(:active):not(:selected) block.empty,
row.activatable:hover:not(:active):not(:selected) progressbar trough,
row.activatable:hover:not(:active):not(:selected) levelbar trough,
row.activatable:hover:not(:active):not(:selected) scale trough,
row.activatable:hover:not(:active):not(:selected) radio:not(:checked):not(:indeterminate),
row.activatable:hover:not(:active):not(:selected) check:not(:checked):not(:indeterminate) {
  @include shadows.apply-shadow(inset-thin, base0D);
}
row.activatable:hover:not(:active):not(:selected) popover block.empty,
row.activatable:hover:not(:active):not(:selected) popover progressbar trough,
row.activatable:hover:not(:active):not(:selected) popover levelbar trough,
row.activatable:hover:not(:active):not(:selected) popover scale trough,
row.activatable:hover:not(:active):not(:selected) popover radio:not(:checked):not(:indeterminate),
row.activatable:hover:not(:active):not(:selected) popover check:not(:checked):not(:indeterminate) {
  @include shadows.apply-shadow(inset-thin, base01);
}
row.activatable:hover:not(:active):not(:selected) switch {
  color: h.token-resolve(base0B);
  @include shadows.apply-shadow(inset, base0D);
}
row.activatable:hover:not(:selected):not(:active) {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}
row > revealer {
  padding: 0px 14px 0px 14px;
}
row box > image {
  padding-right: 8px;
}
row box > label {
  padding-right: 2px;
}

row.activatable:hover entry {
  background-color: h.token-resolve(base0D);
}
row.activatable:hover entry:focus {
  @include shadows.apply-shadow(inset, base0D);
}
row.activatable:hover selection:focus {
  background-color: h.token-resolve(base02);
}
/*the row is acting as a button here, so no need to have styling for the button itself*/
row.activatable > button.text-button,
row.activatable:hover > button.text-button {
  background-color: transparent;
  box-shadow: none;
}
row.activatable:hover:not(:selected) button:active {
  @include shadows.apply-shadow(inset, base0D);
}
row:not(.sidebar-row) ~ separator {
  all: unset;
}

list {
  border-radius: 10px;
  color: h.token-resolve(base0D);
}
list > row {
  min-height: 35px;
  margin: 1px 6px 2px 7px;
  padding: 2px 15px 1px 14px;
}
list > row.activatable:hover {
  margin: 1px 6px 1px 7px;
  padding: 2px 15px 2px 14px;
}
list > row.activatable:active,
list > row.activatable:selected {
  margin: 0px 6px 0px 6px;
  padding: 3px 15px;
}

list > row:not(.sidebar-row) {
  border-radius: 0px;
}
list > row.activatable:not(.sidebar-row):hover {
  border-radius: 50px;
}
list > row.activatable:not(.sidebar-row):active,
list > row.activatable:not(.sidebar-row):selected {
  border-radius: 50px;
}

.sidebar {
  background-color: h.token-resolve(base01);
}
.sidebar > scrolledwindow {
  border-radius: 0px;
  background-color: transparent;
}
.sidebar > scrolledwindow > viewport > list {
  background-color: h.token-resolve(base01);
}
.sidebar > scrolledwindow > viewport > list > header {
  padding-right: 12px;
  padding-left: 12px;
}
.sidebar > scrolledwindow > viewport > list > separator.horizontal {
  all: unset;
}
list > row.sidebar-row,
.sidebar > scrolledwindow > viewport > list > row {
  border-bottom-color: transparent;
  box-shadow: none;
}
list > row.sidebar-row,
list > row.sidebar-row:hover,
.sidebar > scrolledwindow > viewport > list > row,
.sidebar > scrolledwindow > viewport > list > row:hover {
  min-height: 35px;
  margin: 1px 6px 1px 7px;
  padding: 0px 1px 0px 0px;
}
.sidebar > scrolledwindow > viewport > list > row:active,
.sidebar > scrolledwindow > viewport > list > row:selected,
scrolledwindow > viewport list > row.sidebar-row:active,
scrolledwindow > viewport list > row.sidebar-row:selected {
  margin: 0px 6px 0px 6px;
  padding: 1px;
  background-color: transparent;
  @include shadows.apply-shadow(inset, base01);
}
row.sidebar-row > image:first-child,
row.sidebar-row > label:first-child,
row.sidebar-row > box:first-child,
row.sidebar-row > button:first-child,
row.sidebar-row > cell:first-child,
stacksidebar > scrolledwindow > viewport > list > row > image:first-child,
stacksidebar > scrolledwindow > viewport > list > row > label:first-child,
stacksidebar > scrolledwindow > viewport > list > row > box:first-child,
stacksidebar > scrolledwindow > viewport > list > row > button:first-child,
stacksidebar > scrolledwindow > viewport > list > row > cell:first-child {
  padding-left: 15px;
}
row.sidebar-row > image:last-child,
row.sidebar-row > label:last-child,
row.sidebar-row > box:last-child,
row.sidebar-row > button:last-child,
row.sidebar-row > cell:last-child,
stacksidebar > scrolledwindow > viewport > list > row > image:last-child,
stacksidebar > scrolledwindow > viewport > list > row > label:last-child,
stacksidebar > scrolledwindow > viewport > list > row > box:last-child,
stacksidebar > scrolledwindow > viewport > list > row > button:last-child,
stacksidebar > scrolledwindow > viewport > list > row > cell:last-child {
  padding-right: 15px;
}

header {
  margin: 0px 4px;
  border-bottom: 1px solid h.token-resolve(base01-black-80-dark);
  background-color: transparent;
  @include shadows.apply-shadow(separator-bottom-horizontal, base01);
}
frame header,
scrolledwindow header {
  border-bottom-color: h.token-resolve(base00-black-80-dark);
  @include shadows.apply-shadow(separator-bottom-horizontal, base00);
}
header > button {
  min-height: 24px;
  margin: 4px 0px 3px 1px;
  border: none;
}
header > button:hover:active {
  margin: 3px 0px;
}

/*Inspector global settings dropdowns, which I think were directly pasted from gtk 4 css*/
stack:hover > row.activatable:hover {
  box-shadow: none;
}
row:hover button.text-button:checked,
row:hover button.text-button:checked:hover,
row:hover dropdown > button.toggle:checked,
row:hover dropdown > button.toggle:checked:hover {
  @include shadows.apply-shadow(inset, base0D);
}
/* row:hover button.text-button:checked *, */
/* row:hover dropdown > button.toggle:checked * { */
/*   color: h.token-resolve(base01); */
/* } */
row:not(:hover) button.text-button:checked:not(:hover),
row:not(:hover) dropdown > button.toggle:checked:not(:hover) {
  background-color: h.token-resolve(base02);
  @include shadows.apply-shadow(inset, base02);
}

popover list.view > row.activatable:selected:not(:hover) {
  box-shadow: unset;
}
popover list.view > row.activatable:hover {
  color: h.token-resolve(base01);
  background-color: h.token-resolve(base0D);
  @include shadows.apply-shadow(thin, base0D);
}
popover list.view > row.activatable:focus,
popover list.view > row.activatable:focus:selected {
  color: h.token-resolve(base0D);
  background-color: h.token-resolve(base01);
  @include shadows.apply-shadow(inset, base01);
}

.view > row.activatable:selected,
.view > child.activatable:selected,
frame list > row.activatable:selected {
  @include shadows.apply-shadow(inset, base00);
}

/*Ex: file picker*/
.sidebar list row {
  min-height: 36px;
}
.sidebar list > row > label {
  padding: 0px 6px 0px 6px;
}
placessidebar + separator {
  all: unset;
}
filechooser paned {
  background-color: h.token-resolve(base01);
}
placessidebar {
  margin: 0px;
  padding: 6px 0px 6px 0px;
  background-color: h.token-resolve(base01);
  @include shadows.apply-shadow(thin, base01);
}
placesview > stack,
placesview > actionbar,
#pathbarbox {
  background-color: h.token-resolve(base01);
}
placesview > stack > frame {
  margin: 6px 6px 0px 0px;
}
filechooser stack > box > scrolledwindow:not(#_) {
  margin: 6px 6px 6px 0px;
  border-radius: 10px;
  background-color: h.token-resolve(base00);
  @include shadows.apply-shadow(inset, base00);
}
filechooser stack:not(#_) {
  border-radius: 10px;
  background-color: transparent;
}
filechooser #pathbarbox {
  padding: 6px 0px 0px 0px;
  background-color: h.token-resolve(base01);
}
#pathbarbox button {
  background-color: transparent;
}
#pathbarbox .path-bar.linked > button:not(.slider-button) + button,
#pathbarbox .path-bar.linked > button:not(.slider-button) + button:not(.slider-button) {
  @include shadows.apply-shadow(separator-vertical, base01);
}
#pathbarbox .path-bar.linked > button.slider-button + button:not(:hover):not(:active):not(:checked),
#pathbarbox .path-bar.linked > button + button.slider-button:not(:hover):not(:active):not(:checked),
#pathbarbox .path-bar.linked > button:not(#_):hover + button:not(:active):not(:checked),
#pathbarbox .path-bar.linked > button:not(#_):active + button:not(:hover):not(:checked),
#pathbarbox .path-bar.linked > button:not(#_):checked + button:not(:hover):not(:active),
#pathbarbox .path-bar.linked > button:not(#_):hover:active + button:not(:checked),
#pathbarbox .path-bar.linked > button:not(#_):hover:checked + button:not(:active) {
  box-shadow: none;
}
#pathbarbox button.slider-button {
  margin: 1px 1px 0px 2px;
  padding: 1px 9px 2px 8px;
  border-radius: 50px;
}
#pathbarbox button.slider-button:active,
#pathbarbox button.slider-button:checked {
  margin: 0px 1px 0px 1px;
  padding: 2px 9px;
}
#pathbarbox button.slider-button:hover {
  @include shadows.apply-shadow(thin, base0D);
}
#pathbarbox button.text-button.radio,
#pathbarbox button.text-button.toggle {
  min-width: 16px;
}
#pathbarbox .path-bar.linked > button:not(#_):active,
#pathbarbox .path-bar.linked button:not(#_):checked,
#pathbarbox .path-bar.linked > button:not(#_):hover:active,
#pathbarbox .path-bar.linked button:not(#_):hover:checked {
  @include shadows.apply-shadow(inset, base01);
}
#pathbarbox button:hover:checked {
  color: h.token-resolve(base01);
}
#pathbarbox button *,
#pathbarbox button:hover:active *,
#pathbarbox button:hover:checked * {
  color: h.token-resolve(base0D);
}
#pathbarbox button:not(#_):hover:not(:active):not(:checked) * {
  color: h.token-resolve(base01);
}
#pathbarbox button * + * {
  padding: 0px 0px 0px 4px;
}

grid.horizontal > spinbutton.horizontal,
grid.horizontal > combobox {
  margin-right: 3px;
  margin-bottom: 3px;
}
