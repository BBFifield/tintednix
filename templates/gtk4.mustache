/* Global color definitions */

/* {{{scheme-name}}} by {{{scheme-author}}} */

@use "sass:color";

$variant: {{scheme-variant}}; // “dark” or “light”

/// Returns rgb(r, g, b) where r/g/b are integers. We do lose precision, but the difference is negligible
@function to-rgb($c1, $c2, $weight) {
  $mixed: color.mix($c1, $c2, $weight: $weight, $method: oklab);

  $r: red($mixed);
  $g: green($mixed);
  $b: blue($mixed);

  @return rgb($r, $g, $b);
}


/// Mixin: ripple-out-keyframes
/// @param $color-var  CSS custom‐property name (e.g. --ripple-color)
/// @param $name       Animation name (defaults to ripple-out)
@mixin ripple-out-keyframes($color-var, $name: ripple-out) {
  @at-root {
    @keyframes #{$name} {
      from {
        background-image: #{unquote(
          "radial-gradient(circle farthest-corner at center, \
           alpha(var(#{$color-var}), 1) 0%, transparent 0%)"
        )};
      }
      to {
        background-image: #{unquote(
          "radial-gradient(circle farthest-corner at center, \
           alpha(var(#{$color-var}), 1) 100%, transparent 0%)"
        )};
      }
    }
  }
}


/// Mixin: ripple-in-keyframes
/// @param $color-var  CSS custom‐property name (e.g. --ripple-color)
/// @param $name       Animation name (defaults to ripple-in)
@mixin ripple-in-keyframes($color-var, $name: ripple-in) {
  @at-root {
    @keyframes #{$name} {
      from {
        background-image: #{unquote(
          "radial-gradient(circle farthest-corner at center, \
           alpha(var(#{$color-var}), 1) 100%, transparent 0%)"
        )};
      }
      to {
        background-image: #{unquote(
          "radial-gradient(circle farthest-corner at center, \
           alpha(var(#{$color-var}), 1) 0%, transparent 0%)"
        )};
      }
    }
  }
}


$base00: #{{base00-hex}};
$base01: #{{base01-hex}};
$base02: #{{base02-hex}};
$base03: #{{base03-hex}};
$base04: #{{base04-hex}};
$base05: #{{base05-hex}};
$base06: #{{base06-hex}};
$base07: #{{base07-hex}};
$base08: #{{base08-hex}};
$base09: #{{base09-hex}};
$base0A: #{{base0A-hex}};
$base0B: #{{base0B-hex}};
$base0C: #{{base0C-hex}};
$base0D: #{{base0D-hex}};
$base0E: #{{base0E-hex}};
$base0F: #{{base0F-hex}};


@define-color window_bg_color #{$base01};
@define-color window_fg_color #{$base0D};
@define-color headerbar_bg_color    @window_bg_color;
@define-color headerbar_fg_color    @window_fg_color;
@define-color headerbar_border_color #{$base02};
@define-color sidebar_bg_color @headerbar_bg_color;
@define-color sidebar_fg_color @window_fg_color;
@define-color sidebar_backdrop_color @window_bg_color;
@define-color sidebar_border_color   #{$base02};
@define-color sidebar_shade_color    rgba(0,0,0,0.25);
@define-color secondary_sidebar_bg_color @window_bg_color;
@define-color secondary_sidebar_fg_color @window_fg_color;
@define-color secondary_sidebar_backdrop_color @window_bg_color;
@define-color popover_bg_color @window_bg_color;
@define-color popover_fg_color @window_fg_color;
@define-color view_bg_color   #{$base00};
@define-color view_fg_color   @window_fg_color;
@define-color accent_bg_color @window_fg_color;
@define-color accent_color    @accent_bg_color;
@define-color dialog_bg_color  @popover_bg_color;
@define-color dialog_fg_color  @popover_fg_color;
@define-color card_bg_color    #{$base02};
@define-color card_fg_color    @window_fg_color;
@define-color success_color #{$base0B};
@define-color success_bg_color #{$base0B};
@define-color success_fg_color #{$base0B};
@define-color warning_color #{$base0A};
@define-color warning_bg_color #{$base0A};
@define-color warning_fg_color #{$base0A};
@define-color error_color   #{$base08};
@define-color error_bg_color   #{$base08};
@define-color error_fg_color   #{$base08};
@define-color orange           #{$base09};
@define-color light_blue       #{$base0C};
@define-color purple           #{$base0E};

:root {
  /* Base16 tokens */
  --base00: #{$base00};  --base01: #{$base01};  --base02: #{$base02};
  --base03: #{$base03};  --base04: #{$base04};  --base05: #{$base05};
  --base06: #{$base06};  --base07: #{$base07};  --base08: #{$base08};
  --base09: #{$base09};  --base0A: #{$base0A};  --base0B: #{$base0B};
  --base0C: #{$base0C};  --base0D: #{$base0D};  --base0E: #{$base0E};
  --base0F: #{$base0F};

  /* Semantic colors */
  --window-bg-color:    @window_bg_color;
  --window-fg-color:    @window_fg_color;
  --view-bg-color:      @view_bg_color;
  --view-fg-color:      @view_fg_color;
  --accent-bg-color:    @accent_bg_color;
  --accent-fg-color:    @accent_color;
  --headerbar-bg-color: @headerbar_bg_color;
  --headerbar-fg-color: @headerbar_fg_color;
  --headerbar-border-color: @headerbar_border_color;
  --popover-bg-color:   @popover_bg_color;
  --popover-fg-color:   @popover_fg_color;
  --dialog-bg-color:    @dialog_bg_color;
  --dialog-fg-color:    @dialog_fg_color;
  --card-bg-color:      @card_bg_color;
  --card-fg-color:      @card_fg_color;
  --sidebar-bg-color:   @sidebar_bg_color;
  --sidebar-fg-color:   @sidebar_fg_color;
  --sidebar-backdrop-color: @sidebar_backdrop_color;
  --sidebar-border-color:   @sidebar_border_color;
  --sidebar-shade-color:    @sidebar_shade_color;
  --success-bg-color:  @success_bg_color;
  --success-fg-color:  @success_fg_color;
  --warning-bg-color:  @warning_bg_color;
  --warning-fg-color:  @warning_fg_color;
  --error-bg-color:    @error_bg_color;
  --error-fg-color:    @error_fg_color;
  --orange:            @orange;
  --light-blue:        @light_blue;
  --purple:            @purple;



  // base00
  --base00-black-80:      #{to-rgb($base00, black, 80%)};
  --base00-black-95-dark: #{to-rgb($base00, black, if($variant == dark, 95%, 100%))};;
  --base00-black-85-dark: #{to-rgb($base00, black, if($variant == dark, 85%, 95%))};
  --base00-black-80-dark: #{to-rgb($base00, black, if($variant == dark, 80%, 95%))};
  --base00-black-65-dark: #{to-rgb($base00, black, if($variant == dark, 65%, 80%))};
  --base00-black-55-dark: #{to-rgb($base00, black, if($variant == dark, 55%, 80%))};
  --base00-white-95-dark: #{to-rgb($base00, white, if($variant == dark, 95%, 20%))};
  --base00-white-90-dark: #{to-rgb($base00, white, if($variant == dark, 90%, 20%))};

  // base01
  --base01-black-80:      #{to-rgb($base01, black, 80%)};
  --base01-black-80-dark: #{to-rgb($base01, black, if($variant == dark, 80%, 95%))};
  --base01-black-65-dark: #{to-rgb($base01, black, if($variant == dark, 65%, 80%))};
  --base01-black-50-dark: #{to-rgb($base01, black, if($variant == dark, 50%, 80%))};
  --base01-white-90-dark: #{to-rgb($base01, white, if($variant == dark, 90%, 20%))};

  // base02
  --base02-black-80:      #{to-rgb($base02, black, 80%)};
  --base02-black-90-dark: #{to-rgb($base02, black, if($variant == dark, 90%, 95%))};
  --base02-black-75-dark: #{to-rgb($base02, black, if($variant == dark, 75%, 80%))};
  --base02-black-65-dark: #{to-rgb($base02, black, if($variant == dark, 65%, 80%))};
  --base02-white-90-dark: #{to-rgb($base02, white, if($variant == dark, 90%, 30%))};

  // base03
  --base03-black-80:      #{to-rgb($base03, black, 80%)};
  --base03-black-90-dark: #{to-rgb($base03, black, if($variant == dark, 90%, 95%))};
  --base03-black-75-dark: #{to-rgb($base03, black, if($variant == dark, 75%, 80%))};
  --base03-black-65-dark: #{to-rgb($base03, black, if($variant == dark, 65%, 80%))};
  --base03-white-90-dark: #{to-rgb($base03, black, if($variant == dark, 90%, 30%))};

  // base06
  --base06-black-60:      #{to-rgb($base06, black, 60%)};
  --base06-black-65-dark: #{to-rgb($base06, black, if($variant == dark, 65%, 80%))};
  --base06-white-65-dark: #{to-rgb($base06, white, if($variant == dark, 65%, 45%))};

  // base08
  --base08-black-80:      #{to-rgb($base08, black, 80%)};
  --base08-black-60:      #{to-rgb($base08, black, 60%)};
  --base08-black-25:      #{to-rgb($base08, black, 25%)};
  --base08-white-65-dark: #{to-rgb($base08, white, if($variant == dark, 65%, 45%))};

  // base09
  --base09-white-65-dark: #{to-rgb($base09, white, if($variant == dark, 65%, 45%))};

  // base0A
  --base0A-black-80:      #{to-rgb($base0A, black, 80%)};
  --base0A-black-60:      #{to-rgb($base0A, black, 60%)};
  --base0A-black-25:      #{to-rgb($base0A, black, 25%)};
  --base0A-white-65-dark: #{to-rgb($base0A, white, if($variant == dark, 65%, 45%))};

  // base0B
  --base0B-black-80:      #{to-rgb($base0B, black, 80%)};
  --base0B-black-60:      #{to-rgb($base0B, black, 60%)};
  --base0B-black-25:      #{to-rgb($base0B, black, 25%)};
  --base0B-white-65-dark: #{to-rgb($base0B, white, if($variant == dark, 65%, 45%))};

  // base0C
  --base0C-black-80:      #{to-rgb($base0C, black, 80%)};
  --base0C-black-60:      #{to-rgb($base0C, black, 60%)};
  --base0C-black-25:      #{to-rgb($base0C, black, 25%)};
  --base0C-black-65-dark: #{to-rgb($base0C, black, if($variant == dark, 65%, 80%))};
  --base0C-white-65-dark: #{to-rgb($base0C, white, if($variant == dark, 65%, 45%))};

  // base0D
  --base0D-black-80:      #{to-rgb($base0D, black, 80%)};
  --base0D-black-60:      #{to-rgb($base0D, black, 60%)};
  --base0D-black-25:      #{to-rgb($base0D, black, 25%)};
  --base0D-black-65-dark: #{to-rgb($base0D, black, if($variant == dark, 65%, 80%))};
  --base0D-white-65-dark: #{to-rgb($base0D, white, if($variant == dark, 65%, 45%))};

  // base0E
  --base0E-black-60:      #{to-rgb($base0E, black, 60%)};
  --base0E-black-65-dark: #{to-rgb($base0E, black, if($variant == dark, 65%, 80%))};
  --base0E-white-65-dark: #{to-rgb($base0E, white, if($variant == dark, 65%, 45%))};

  // base0F
  --base0F-black-60:      #{to-rgb($base0F, black, 60%)};
  --base0F-black-65-dark: #{to-rgb($base0F, black, if($variant == dark, 65%, 80%))};
  --base0F-white-65-dark: #{to-rgb($base0F, white, if($variant == dark, 65%, 45%))};

  // transparent
  --bg-hl-transparent: rgba(0, 0, 0, 0.05);

  @include ripple-out-keyframes(--base0D, ripple-out-base0D);
  @include ripple-out-keyframes(--base0B, ripple-out-base0B);
  @include ripple-in-keyframes(--base0D, ripple-in-base0D);
  @include ripple-in-keyframes(--base0B, ripple-in-base0B);
}
